{"remainingRequest":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/samuel/Desktop/Lynk/commentsystem/src/components/Replies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/samuel/Desktop/Lynk/commentsystem/src/components/Replies.vue","mtime":1574599174947},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBSZXBseU9mUmVwbGllcyBmcm9tICcuL1JlcGx5T2ZSZXBsaWVzLnZ1ZScKaW1wb3J0ICogYXMgbW9tZW50IGZyb20gJ21vbWVudCcKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogJ1JlcGxpZXMnLAogICAgY29tcG9uZW50czogewogICAgICAgIFJlcGx5T2ZSZXBsaWVzCiAgICB9LAogICAgcHJvcHM6IFsncmVwbGllcycsICdkYXRlJywgJ3JlcGx5SWQnXSwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgcmVwbHlvZnJlcGx5OiBmYWxzZSwKICAgICAgICAgICAgcmVwbHk6ICcnLAogICAgICAgICAgICBlbXB0eU1lc3NhZ2U6JycsCiAgICAgICAgfQogICAgfSwKICAgIG1ldGhvZHM6IHsKICAgICAgICByZXBseUJveCgpIHsKICAgICAgICAgICAgdGhpcy5yZXBseW9mcmVwbHkgPSB0cnVlOwogICAgICAgIH0sCiAgICAgICAgc3VibWl0UmVwbHkoKSB7CiAgICAgICAgICAgIC8qdG8gZW5zdXJlIGNvbnNpc3RlbmN5IG9mIHRoZSBwcmltYXJ5IGtleSBpbiBhIG15c3FsIG1hbm5lciBpIGluY3JlbWVudAogICAgICAgICAgICB0aGUgaWQgb2YgdGhlIGxhc3Qgb2JqZWN0IGluIHRoZSByZXBsaWVzb2ZSZXBseSBhcnJheS4KICAgICAgICAgICAgKi8KICAgICAgICAgICAgbGV0IHJlcGxpZXNMZW5ndGggPSB0aGlzLnJlcGx5T2ZSZXBseUNvdW50OwogICAgICAgICAgICBsZXQgcmVwbGllc0FycmF5ID0gdGhpcy5pdGVtczsKICAgICAgICAgICAgbGV0IGlkOwogICAgICAgICAgICBpZiAocmVwbGllc0xlbmd0aCAtIDEgPT0gLTEpIHsKICAgICAgICAgICAgICAgIGlkID0gMDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGlkID0gcmVwbGllc0FycmF5W3JlcGxpZXNMZW5ndGggLSAxXS5yZXBseU9mUmVwbHlJZCArIDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLyplbnN1cmUgbm8gZW1wdHkgcmVwbGllcyBhcmUgc3VibWl0dGVkKi8KCiAgICAgICAgICAgIGlmICh0aGlzLnJlcGx5Lmxlbmd0aCA8IDEpIHsKICAgICAgICAgICAgICAgIHRoaXMuZW1wdHlNZXNzYWdlID0gJ1lvdSBjYW50IHBvc3QgYW4gZW1wdHkgcmVwbHkuUGxlYXNlIHR5cGUgc29tZXRoaW5nJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuZW1wdHlNZXNzYWdlID0gJyc7CiAgICAgICAgICAgIC8vdXNpbmcgY29tbWVudElkIHRvIHRyYWNrIGFsbCByZXBsaWVzIGJlbG9uZ2luZyB0byBjb21tZW50ICAgIAogICAgICAgICAgICBsZXQgbGF0ZXN0UmVwbHkgPSB7CiAgICAgICAgICAgICAgICBkYXRlOiB0aGlzLmN1cnJlbnREYXRlLAogICAgICAgICAgICAgICAgcmVwbHlPZlJlcGx5OiB0aGlzLnJlcGx5LAogICAgICAgICAgICAgICAgcmVwbHlJZDogdGhpcy5yZXBseUlkLAogICAgICAgICAgICAgICAgcmVwbHlPZlJlcGx5SWQ6IGlkLAogICAgICAgICAgICAgICAgYWN0aXZlOiB0cnVlCiAgICAgICAgICAgIH07CiAgICAgICAgICAgIHRoaXMuJHN0b3JlLmNvbW1pdCgnYWRkcmVwbHlPZlJlcGx5JywgbGF0ZXN0UmVwbHkpOwogICAgICAgICAgICB0aGlzLnJlcGx5ID0gJycKICAgICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgZGVsZXRlUmVwbHkoaWQpewogICAgICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3RyYXNoUmVwbHknLGlkKQogICAgICAgIH0KCiAgICB9LAogICAgY29tcHV0ZWQ6IHsKICAgICAgICBjdXJyZW50RGF0ZSgpIHsKICAgICAgICAgICAgcmV0dXJuIG1vbWVudCgpLmZvcm1hdCgnbGxsbCcpOwogICAgICAgIH0sCiAgICAgICAgaXRlbXMoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5yZXBsaWVzT2ZSZXBseQogICAgICAgIH0sCiAgICAgICAgZmlsdGVyZWRJdGVtcygpIHsKICAgICAgICAgICAgLy9maWx0ZXIgcmVwbGllcyBvZiByZXBsaWVzIHRvIHRoZWlyIHJlc3BlY3RpdmUgcmVwbHkKICAgICAgICAgICAgY29uc3QgZmlsdGVyQnlJZCA9IChpdGVtKSA9PiB7CiAgICAgICAgICAgICAgICBpZiAoaXRlbS5yZXBseUlkID09IHRoaXMucmVwbHlJZCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5yZXBsaWVzT2ZSZXBseS5maWx0ZXIoZmlsdGVyQnlJZCk7CgogICAgICAgIH0sCiAgICAgICAgcmVwbHlPZlJlcGx5Q291bnQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnJlcGx5T2ZSZXBseUNvdW50CiAgICAgICAgfSwKICAgIH0KfQo="},{"version":3,"sources":["Replies.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Replies.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"replies\">\n        <p>{{replies}}</p>\n        <div class=\"flex reply-delete-buttons\">\n            <span @click=\"replyBox\"><i class=\"fas fa-reply\"></i>Reply</span>\n            <span @click=\"deleteReply(replyId)\"><i class=\"fas fa-trash-alt\"></i>Delete</span>\n        </div>\n        <p class=\"date\">{{date}}</p>\n        <div class=\"replyofreply-input\" v-show=\"replyofreply\">\n            <input type=\"text\" v-model=\"reply\">\n            <button @click=\"submitReply\">Submit</button>\n             <p class=\"danger\" v-if=\"emptyMessage\">{{emptyMessage}}</p>\n            <ReplyOfReplies v-for=\"(item,index) in filteredItems\" :key=\"'replies'+index\" :reply=\"item.replyOfReply\"\n                :date=\"item.date \" :replyofReplyId=\"item.replyOfReplyId\" />\n\n        </div>\n\n\n    </div>\n</template>\n<script>\n    import ReplyOfReplies from './ReplyOfReplies.vue'\n    import * as moment from 'moment'\n    export default {\n        name: 'Replies',\n        components: {\n            ReplyOfReplies\n        },\n        props: ['replies', 'date', 'replyId'],\n        data() {\n            return {\n                replyofreply: false,\n                reply: '',\n                emptyMessage:'',\n            }\n        },\n        methods: {\n            replyBox() {\n                this.replyofreply = true;\n            },\n            submitReply() {\n                /*to ensure consistency of the primary key in a mysql manner i increment\n                the id of the last object in the repliesofReply array.\n                */\n                let repliesLength = this.replyOfReplyCount;\n                let repliesArray = this.items;\n                let id;\n                if (repliesLength - 1 == -1) {\n                    id = 0;\n                } else {\n                    id = repliesArray[repliesLength - 1].replyOfReplyId + 1;\n                }\n                /*ensure no empty replies are submitted*/\n\n                if (this.reply.length < 1) {\n                    this.emptyMessage = 'You cant post an empty reply.Please type something';\n                } else {\n                    this.emptyMessage = '';\n                //using commentId to track all replies belonging to comment    \n                let latestReply = {\n                    date: this.currentDate,\n                    replyOfReply: this.reply,\n                    replyId: this.replyId,\n                    replyOfReplyId: id,\n                    active: true\n                };\n                this.$store.commit('addreplyOfReply', latestReply);\n                this.reply = ''\n                }\n            },\n            deleteReply(id){\n                this.$store.commit('trashReply',id)\n            }\n\n        },\n        computed: {\n            currentDate() {\n                return moment().format('llll');\n            },\n            items() {\n                return this.$store.state.repliesOfReply\n            },\n            filteredItems() {\n                //filter replies of replies to their respective reply\n                const filterById = (item) => {\n                    if (item.replyId == this.replyId) {\n                        return true;\n                    }\n                }\n                return this.$store.state.repliesOfReply.filter(filterById);\n\n            },\n            replyOfReplyCount() {\n                return this.$store.getters.replyOfReplyCount\n            },\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .replies {\n        padding: 0.5rem;\n        background: #E8AFBE;\n        margin: 0rem 0rem 0.5rem 2rem;\n\n        .replyofreply-input {\n            margin: 1rem 0;\n\n            input {\n                width: 100%;\n                height: 60px;\n            }\n\n            button {\n                background-color: darkviolet;\n                padding: 0.5rem;\n                color: #fff;\n                margin: 0.5rem 0;\n\n            }\n        }\n\n        .replyofreplies {\n            background: #957aff;\n            margin: 0rem 0rem 0.5rem 2rem;\n        }\n    }\n</style>"]}]}