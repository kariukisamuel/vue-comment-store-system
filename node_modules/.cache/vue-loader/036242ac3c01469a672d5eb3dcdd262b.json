{"remainingRequest":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/samuel/Desktop/Lynk/commentsystem/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/samuel/Desktop/Lynk/commentsystem/src/App.vue","mtime":1574601025955},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBIZWxsb1dvcmxkIGZyb20gJy4vY29tcG9uZW50cy9IZWxsb1dvcmxkLnZ1ZScKaW1wb3J0IENvbW1lbnRzIGZyb20gJy4vY29tcG9uZW50cy9Db21tZW50cy52dWUnCmltcG9ydCBUcmFzaCBmcm9tICcuL2NvbXBvbmVudHMvVHJhc2gudnVlJwppbXBvcnQgKiBhcyBtb21lbnQgZnJvbSAnbW9tZW50JzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICdhcHAnLAogICAgY29tcG9uZW50czogewogICAgICAgIEhlbGxvV29ybGQsCiAgICAgICAgQ29tbWVudHMsCiAgICAgICAgVHJhc2gsCiAgICB9LAogICAgZGF0YSgpIHsKICAgICAgICByZXR1cm4gewogICAgICAgICAgICB0ZXh0TGVuZ3RoOiAyMCwKICAgICAgICAgICAgY29tbWVudDogJycsCiAgICAgICAgICAgIGVtcHR5TWVzc2FnZTogJycsCiAgICAgICAgICAgIGJ5RGF0ZTpmYWxzZSwKICAgICAgICAgICAgYnlMZW5ndGg6ZmFsc2UsCgogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgc3VibWl0Q29tbWVudCgpIHsKICAgICAgICAgICAgLyp0byBlbnN1cmUgY29uc2lzdGVuY3kgb2YgdGhlIHByaW1hcnkga2V5IGluIGEgbXlzcWwgbWFubmVyIGkgaW5jcmVtZW50CiAgICAgICAgICAgIHRoZSBpZCBvZiB0aGUgbGFzdCBvYmplY3QgaW4gdGhlIGNvbW1lbnRzIGFycmF5LlRoaXMgaXMgaGFuZHkgd2hlbiBkZWxldGluZwogICAgICAgICAgICBhbmQgYXNzb2NpYXRpbmcgY29tbWVudHMgdG8gcmVwbGllcwogICAgICAgICAgICAqLwogICAgICAgICAgICBsZXQgY29tbWVudHNMZW5ndGggPSB0aGlzLmNvbW1lbnRzQ291bnQ7CiAgICAgICAgICAgIGxldCBjb21tZW50c0FycmF5ID0gdGhpcy5pdGVtczsKICAgICAgICAgICAgbGV0IGlkOwogICAgICAgICAgICBpZiAoY29tbWVudHNMZW5ndGggLSAxID09IC0xKSB7CiAgICAgICAgICAgICAgICBpZCA9IDA7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBpZCA9IGNvbW1lbnRzQXJyYXlbY29tbWVudHNMZW5ndGggLSAxXS5jb21tZW50SWQgKyAxOwogICAgICAgICAgICB9CiAgICAgICAgICAgIC8qZW5zdXJlIG5vIGVtcHR5IGNvbW1lbnRzIGFyZSBzdWJtaXR0ZWQqLwoKICAgICAgICAgICAgaWYgKHRoaXMuY29tbWVudC5sZW5ndGggPCAxKSB7CiAgICAgICAgICAgICAgICB0aGlzLmVtcHR5TWVzc2FnZSA9ICdZb3UgY2FudCBwb3N0IGFuIGVtcHR5IGNvbW1lbnQuUGxlYXNlIHR5cGUgc29tZXRoaW5nJzsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuZW1wdHlNZXNzYWdlID0gJyc7CiAgICAgICAgICAgICAgICBsZXQgbGF0ZXN0Q29tbWVudCA9IHsKICAgICAgICAgICAgICAgICAgICBkYXRlOiB0aGlzLmN1cnJlbnREYXRlLAogICAgICAgICAgICAgICAgICAgIGNvbW1lbnQ6IHRoaXMuY29tbWVudCwKICAgICAgICAgICAgICAgICAgICBjb21tZW50SWQ6IGlkLAogICAgICAgICAgICAgICAgICAgIGFjdGl2ZTogdHJ1ZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCdhZGRDb21tZW50JywgbGF0ZXN0Q29tbWVudCk7CiAgICAgICAgICAgICAgICB0aGlzLmNvbW1lbnQgPSAnJwogICAgICAgICAgICB9CgoKICAgICAgICB9CgogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgY3VycmVudERhdGUoKSB7CiAgICAgICAgICAgIHJldHVybiBtb21lbnQoKS5mb3JtYXQoJ2xsbGwnKTsKICAgICAgICB9LAogICAgICAgIGNvbW1lbnRzQ291bnQoKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLmNvbW1lbnRzQ291bnQKICAgICAgICB9LAogICAgICAgIGl0ZW1zKCkgewoKICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5zdGF0ZS5jb21tZW50cwogICAgICAgIAogICAgICAgICAgICAKICAgICAgICB9LAogICAgICAgIHNvcnRlZCgpewogICAgICAgICAgICByZXR1cm4gdGhpcy5pdGVtcy5zb3J0KCk7CiAgICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AA0BA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n    <div id=\"app\">\n        <HelloWorld msg=\"Comment System\" />\n        <div class=\"comment-area\">\n            <textarea v-model=\"comment\" :maxlength=\"textLength\"></textarea>\n            <p class=\"danger\" v-text=\"(textLength - comment.length) + ' remaining'\"></p>\n            <p class=\"danger\" v-if=\"emptyMessage\">{{emptyMessage}}</p>\n            <button type=\"submit\" @click=\"submitComment\"> Submit </button>\n        </div>\n      <div>  \n        <h3>Comments</h3>\n        <select>\n        <option value=\"volvo\">SORT</option>\n        <option value=\"saab\">By Date</option>\n        <option value=\"mercedes\">Mercedes</option>\n        <option value=\"audi\">Audi</option>\n        </select>\n        \n      </div>\n        <Comments v-for=\"(item,index) in items\" :key=\"'comment' + index\" :comment=\"item.comment\" :date=\"item.date\"\n            :commentId=\"item.commentId\" />\n        <h3>Trash</h3>\n        <Trash />\n    </div>\n</template>\n<script>\n    import HelloWorld from './components/HelloWorld.vue'\n    import Comments from './components/Comments.vue'\n    import Trash from './components/Trash.vue'\n    import * as moment from 'moment';\n\n    export default {\n        name: 'app',\n        components: {\n            HelloWorld,\n            Comments,\n            Trash,\n        },\n        data() {\n            return {\n                textLength: 20,\n                comment: '',\n                emptyMessage: '',\n                byDate:false,\n                byLength:false,\n\n            }\n        },\n        methods: {\n            submitComment() {\n                /*to ensure consistency of the primary key in a mysql manner i increment\n                the id of the last object in the comments array.This is handy when deleting\n                and associating comments to replies\n                */\n                let commentsLength = this.commentsCount;\n                let commentsArray = this.items;\n                let id;\n                if (commentsLength - 1 == -1) {\n                    id = 0;\n                } else {\n                    id = commentsArray[commentsLength - 1].commentId + 1;\n                }\n                /*ensure no empty comments are submitted*/\n\n                if (this.comment.length < 1) {\n                    this.emptyMessage = 'You cant post an empty comment.Please type something';\n                } else {\n                    this.emptyMessage = '';\n                    let latestComment = {\n                        date: this.currentDate,\n                        comment: this.comment,\n                        commentId: id,\n                        active: true\n                    }\n                    this.$store.commit('addComment', latestComment);\n                    this.comment = ''\n                }\n\n\n            }\n\n        },\n        computed: {\n            currentDate() {\n                return moment().format('llll');\n            },\n            commentsCount() {\n                return this.$store.getters.commentsCount\n            },\n            items() {\n \n                    return this.$store.state.comments\n            \n                \n            },\n            sorted(){\n                return this.items.sort();\n            }\n        }\n    }\n</script>\n<style lang=\"scss\">\n    #app {\n        font-family: 'Avenir', Helvetica, Arial, sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-align: left;\n        color: #2c3e50;\n        margin-top: 60px;\n    }\n\n    .comment-area {\n        textarea {\n            width: 100%;\n            height: 100px;\n        }\n\n        .danger {\n            color: red;\n        }\n    }\n</style>"]}]}