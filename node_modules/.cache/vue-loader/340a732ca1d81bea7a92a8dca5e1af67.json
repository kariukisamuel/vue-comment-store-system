{"remainingRequest":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/samuel/Desktop/Lynk/commentsystem/src/components/Replies.vue?vue&type=style&index=0&id=5ae23f08&lang=scss&scoped=true&","dependencies":[{"path":"/home/samuel/Desktop/Lynk/commentsystem/src/components/Replies.vue","mtime":1574599174947},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnJlcGxpZXMgewogICAgcGFkZGluZzogMC41cmVtOwogICAgYmFja2dyb3VuZDogI0U4QUZCRTsKICAgIG1hcmdpbjogMHJlbSAwcmVtIDAuNXJlbSAycmVtOwoKICAgIC5yZXBseW9mcmVwbHktaW5wdXQgewogICAgICAgIG1hcmdpbjogMXJlbSAwOwoKICAgICAgICBpbnB1dCB7CiAgICAgICAgICAgIHdpZHRoOiAxMDAlOwogICAgICAgICAgICBoZWlnaHQ6IDYwcHg7CiAgICAgICAgfQoKICAgICAgICBidXR0b24gewogICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBkYXJrdmlvbGV0OwogICAgICAgICAgICBwYWRkaW5nOiAwLjVyZW07CiAgICAgICAgICAgIGNvbG9yOiAjZmZmOwogICAgICAgICAgICBtYXJnaW46IDAuNXJlbSAwOwoKICAgICAgICB9CiAgICB9CgogICAgLnJlcGx5b2ZyZXBsaWVzIHsKICAgICAgICBiYWNrZ3JvdW5kOiAjOTU3YWZmOwogICAgICAgIG1hcmdpbjogMHJlbSAwcmVtIDAuNXJlbSAycmVtOwogICAgfQp9Cg=="},{"version":3,"sources":["Replies.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Replies.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <div class=\"replies\">\n        <p>{{replies}}</p>\n        <div class=\"flex reply-delete-buttons\">\n            <span @click=\"replyBox\"><i class=\"fas fa-reply\"></i>Reply</span>\n            <span @click=\"deleteReply(replyId)\"><i class=\"fas fa-trash-alt\"></i>Delete</span>\n        </div>\n        <p class=\"date\">{{date}}</p>\n        <div class=\"replyofreply-input\" v-show=\"replyofreply\">\n            <input type=\"text\" v-model=\"reply\">\n            <button @click=\"submitReply\">Submit</button>\n             <p class=\"danger\" v-if=\"emptyMessage\">{{emptyMessage}}</p>\n            <ReplyOfReplies v-for=\"(item,index) in filteredItems\" :key=\"'replies'+index\" :reply=\"item.replyOfReply\"\n                :date=\"item.date \" :replyofReplyId=\"item.replyOfReplyId\" />\n\n        </div>\n\n\n    </div>\n</template>\n<script>\n    import ReplyOfReplies from './ReplyOfReplies.vue'\n    import * as moment from 'moment'\n    export default {\n        name: 'Replies',\n        components: {\n            ReplyOfReplies\n        },\n        props: ['replies', 'date', 'replyId'],\n        data() {\n            return {\n                replyofreply: false,\n                reply: '',\n                emptyMessage:'',\n            }\n        },\n        methods: {\n            replyBox() {\n                this.replyofreply = true;\n            },\n            submitReply() {\n                /*to ensure consistency of the primary key in a mysql manner i increment\n                the id of the last object in the repliesofReply array.\n                */\n                let repliesLength = this.replyOfReplyCount;\n                let repliesArray = this.items;\n                let id;\n                if (repliesLength - 1 == -1) {\n                    id = 0;\n                } else {\n                    id = repliesArray[repliesLength - 1].replyOfReplyId + 1;\n                }\n                /*ensure no empty replies are submitted*/\n\n                if (this.reply.length < 1) {\n                    this.emptyMessage = 'You cant post an empty reply.Please type something';\n                } else {\n                    this.emptyMessage = '';\n                //using commentId to track all replies belonging to comment    \n                let latestReply = {\n                    date: this.currentDate,\n                    replyOfReply: this.reply,\n                    replyId: this.replyId,\n                    replyOfReplyId: id,\n                    active: true\n                };\n                this.$store.commit('addreplyOfReply', latestReply);\n                this.reply = ''\n                }\n            },\n            deleteReply(id){\n                this.$store.commit('trashReply',id)\n            }\n\n        },\n        computed: {\n            currentDate() {\n                return moment().format('llll');\n            },\n            items() {\n                return this.$store.state.repliesOfReply\n            },\n            filteredItems() {\n                //filter replies of replies to their respective reply\n                const filterById = (item) => {\n                    if (item.replyId == this.replyId) {\n                        return true;\n                    }\n                }\n                return this.$store.state.repliesOfReply.filter(filterById);\n\n            },\n            replyOfReplyCount() {\n                return this.$store.getters.replyOfReplyCount\n            },\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .replies {\n        padding: 0.5rem;\n        background: #E8AFBE;\n        margin: 0rem 0rem 0.5rem 2rem;\n\n        .replyofreply-input {\n            margin: 1rem 0;\n\n            input {\n                width: 100%;\n                height: 60px;\n            }\n\n            button {\n                background-color: darkviolet;\n                padding: 0.5rem;\n                color: #fff;\n                margin: 0.5rem 0;\n\n            }\n        }\n\n        .replyofreplies {\n            background: #957aff;\n            margin: 0rem 0rem 0.5rem 2rem;\n        }\n    }\n</style>"]}]}