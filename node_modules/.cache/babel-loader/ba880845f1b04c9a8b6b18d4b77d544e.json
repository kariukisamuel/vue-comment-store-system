{"remainingRequest":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/babel-loader/lib/index.js!/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/samuel/Desktop/Lynk/commentsystem/src/components/Replies.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/samuel/Desktop/Lynk/commentsystem/src/components/Replies.vue","mtime":1574599174947},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/samuel/Desktop/Lynk/commentsystem/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFJlcGx5T2ZSZXBsaWVzIGZyb20gIi4vUmVwbHlPZlJlcGxpZXMudnVlIjsKaW1wb3J0ICogYXMgbW9tZW50IGZyb20gJ21vbWVudCc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUmVwbGllcycsCiAgY29tcG9uZW50czogewogICAgUmVwbHlPZlJlcGxpZXM6IFJlcGx5T2ZSZXBsaWVzCiAgfSwKICBwcm9wczogWydyZXBsaWVzJywgJ2RhdGUnLCAncmVwbHlJZCddLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICByZXBseW9mcmVwbHk6IGZhbHNlLAogICAgICByZXBseTogJycsCiAgICAgIGVtcHR5TWVzc2FnZTogJycKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICByZXBseUJveDogZnVuY3Rpb24gcmVwbHlCb3goKSB7CiAgICAgIHRoaXMucmVwbHlvZnJlcGx5ID0gdHJ1ZTsKICAgIH0sCiAgICBzdWJtaXRSZXBseTogZnVuY3Rpb24gc3VibWl0UmVwbHkoKSB7CiAgICAgIC8qdG8gZW5zdXJlIGNvbnNpc3RlbmN5IG9mIHRoZSBwcmltYXJ5IGtleSBpbiBhIG15c3FsIG1hbm5lciBpIGluY3JlbWVudAogICAgICB0aGUgaWQgb2YgdGhlIGxhc3Qgb2JqZWN0IGluIHRoZSByZXBsaWVzb2ZSZXBseSBhcnJheS4KICAgICAgKi8KICAgICAgdmFyIHJlcGxpZXNMZW5ndGggPSB0aGlzLnJlcGx5T2ZSZXBseUNvdW50OwogICAgICB2YXIgcmVwbGllc0FycmF5ID0gdGhpcy5pdGVtczsKICAgICAgdmFyIGlkOwoKICAgICAgaWYgKHJlcGxpZXNMZW5ndGggLSAxID09IC0xKSB7CiAgICAgICAgaWQgPSAwOwogICAgICB9IGVsc2UgewogICAgICAgIGlkID0gcmVwbGllc0FycmF5W3JlcGxpZXNMZW5ndGggLSAxXS5yZXBseU9mUmVwbHlJZCArIDE7CiAgICAgIH0KICAgICAgLyplbnN1cmUgbm8gZW1wdHkgcmVwbGllcyBhcmUgc3VibWl0dGVkKi8KCgogICAgICBpZiAodGhpcy5yZXBseS5sZW5ndGggPCAxKSB7CiAgICAgICAgdGhpcy5lbXB0eU1lc3NhZ2UgPSAnWW91IGNhbnQgcG9zdCBhbiBlbXB0eSByZXBseS5QbGVhc2UgdHlwZSBzb21ldGhpbmcnOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZW1wdHlNZXNzYWdlID0gJyc7IC8vdXNpbmcgY29tbWVudElkIHRvIHRyYWNrIGFsbCByZXBsaWVzIGJlbG9uZ2luZyB0byBjb21tZW50ICAgIAoKICAgICAgICB2YXIgbGF0ZXN0UmVwbHkgPSB7CiAgICAgICAgICBkYXRlOiB0aGlzLmN1cnJlbnREYXRlLAogICAgICAgICAgcmVwbHlPZlJlcGx5OiB0aGlzLnJlcGx5LAogICAgICAgICAgcmVwbHlJZDogdGhpcy5yZXBseUlkLAogICAgICAgICAgcmVwbHlPZlJlcGx5SWQ6IGlkLAogICAgICAgICAgYWN0aXZlOiB0cnVlCiAgICAgICAgfTsKICAgICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ2FkZHJlcGx5T2ZSZXBseScsIGxhdGVzdFJlcGx5KTsKICAgICAgICB0aGlzLnJlcGx5ID0gJyc7CiAgICAgIH0KICAgIH0sCiAgICBkZWxldGVSZXBseTogZnVuY3Rpb24gZGVsZXRlUmVwbHkoaWQpIHsKICAgICAgdGhpcy4kc3RvcmUuY29tbWl0KCd0cmFzaFJlcGx5JywgaWQpOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGN1cnJlbnREYXRlOiBmdW5jdGlvbiBjdXJyZW50RGF0ZSgpIHsKICAgICAgcmV0dXJuIG1vbWVudCgpLmZvcm1hdCgnbGxsbCcpOwogICAgfSwKICAgIGl0ZW1zOiBmdW5jdGlvbiBpdGVtcygpIHsKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnJlcGxpZXNPZlJlcGx5OwogICAgfSwKICAgIGZpbHRlcmVkSXRlbXM6IGZ1bmN0aW9uIGZpbHRlcmVkSXRlbXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICAvL2ZpbHRlciByZXBsaWVzIG9mIHJlcGxpZXMgdG8gdGhlaXIgcmVzcGVjdGl2ZSByZXBseQogICAgICB2YXIgZmlsdGVyQnlJZCA9IGZ1bmN0aW9uIGZpbHRlckJ5SWQoaXRlbSkgewogICAgICAgIGlmIChpdGVtLnJlcGx5SWQgPT0gX3RoaXMucmVwbHlJZCkgewogICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICB9OwoKICAgICAgcmV0dXJuIHRoaXMuJHN0b3JlLnN0YXRlLnJlcGxpZXNPZlJlcGx5LmZpbHRlcihmaWx0ZXJCeUlkKTsKICAgIH0sCiAgICByZXBseU9mUmVwbHlDb3VudDogZnVuY3Rpb24gcmVwbHlPZlJlcGx5Q291bnQoKSB7CiAgICAgIHJldHVybiB0aGlzLiRzdG9yZS5nZXR0ZXJzLnJlcGx5T2ZSZXBseUNvdW50OwogICAgfQogIH0KfTs="},{"version":3,"sources":["Replies.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA,OAAA,cAAA;AACA,OAAA,KAAA,MAAA,MAAA,QAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,cAAA,EAAA;AADA,GAFA;AAKA,EAAA,KAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,SAAA,CALA;AAMA,EAAA,IANA,kBAMA;AACA,WAAA;AACA,MAAA,YAAA,EAAA,KADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA;AAHA,KAAA;AAKA,GAZA;AAaA,EAAA,OAAA,EAAA;AACA,IAAA,QADA,sBACA;AACA,WAAA,YAAA,GAAA,IAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA;;;AAGA,UAAA,aAAA,GAAA,KAAA,iBAAA;AACA,UAAA,YAAA,GAAA,KAAA,KAAA;AACA,UAAA,EAAA;;AACA,UAAA,aAAA,GAAA,CAAA,IAAA,CAAA,CAAA,EAAA;AACA,QAAA,EAAA,GAAA,CAAA;AACA,OAFA,MAEA;AACA,QAAA,EAAA,GAAA,YAAA,CAAA,aAAA,GAAA,CAAA,CAAA,CAAA,cAAA,GAAA,CAAA;AACA;AACA;;;AAEA,UAAA,KAAA,KAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,YAAA,GAAA,oDAAA;AACA,OAFA,MAEA;AACA,aAAA,YAAA,GAAA,EAAA,CADA,CAEA;;AACA,YAAA,WAAA,GAAA;AACA,UAAA,IAAA,EAAA,KAAA,WADA;AAEA,UAAA,YAAA,EAAA,KAAA,KAFA;AAGA,UAAA,OAAA,EAAA,KAAA,OAHA;AAIA,UAAA,cAAA,EAAA,EAJA;AAKA,UAAA,MAAA,EAAA;AALA,SAAA;AAOA,aAAA,MAAA,CAAA,MAAA,CAAA,iBAAA,EAAA,WAAA;AACA,aAAA,KAAA,GAAA,EAAA;AACA;AACA,KAjCA;AAkCA,IAAA,WAlCA,uBAkCA,EAlCA,EAkCA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,EAAA;AACA;AApCA,GAbA;AAoDA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,MAAA,GAAA,MAAA,CAAA,MAAA,CAAA;AACA,KAHA;AAIA,IAAA,KAJA,mBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA;AACA,KANA;AAOA,IAAA,aAPA,2BAOA;AAAA;;AACA;AACA,UAAA,UAAA,GAAA,SAAA,UAAA,CAAA,IAAA,EAAA;AACA,YAAA,IAAA,CAAA,OAAA,IAAA,KAAA,CAAA,OAAA,EAAA;AACA,iBAAA,IAAA;AACA;AACA,OAJA;;AAKA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,cAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAEA,KAhBA;AAiBA,IAAA,iBAjBA,+BAiBA;AACA,aAAA,KAAA,MAAA,CAAA,OAAA,CAAA,iBAAA;AACA;AAnBA;AApDA,CAAA","sourcesContent":["<template>\n    <div class=\"replies\">\n        <p>{{replies}}</p>\n        <div class=\"flex reply-delete-buttons\">\n            <span @click=\"replyBox\"><i class=\"fas fa-reply\"></i>Reply</span>\n            <span @click=\"deleteReply(replyId)\"><i class=\"fas fa-trash-alt\"></i>Delete</span>\n        </div>\n        <p class=\"date\">{{date}}</p>\n        <div class=\"replyofreply-input\" v-show=\"replyofreply\">\n            <input type=\"text\" v-model=\"reply\">\n            <button @click=\"submitReply\">Submit</button>\n             <p class=\"danger\" v-if=\"emptyMessage\">{{emptyMessage}}</p>\n            <ReplyOfReplies v-for=\"(item,index) in filteredItems\" :key=\"'replies'+index\" :reply=\"item.replyOfReply\"\n                :date=\"item.date \" :replyofReplyId=\"item.replyOfReplyId\" />\n\n        </div>\n\n\n    </div>\n</template>\n<script>\n    import ReplyOfReplies from './ReplyOfReplies.vue'\n    import * as moment from 'moment'\n    export default {\n        name: 'Replies',\n        components: {\n            ReplyOfReplies\n        },\n        props: ['replies', 'date', 'replyId'],\n        data() {\n            return {\n                replyofreply: false,\n                reply: '',\n                emptyMessage:'',\n            }\n        },\n        methods: {\n            replyBox() {\n                this.replyofreply = true;\n            },\n            submitReply() {\n                /*to ensure consistency of the primary key in a mysql manner i increment\n                the id of the last object in the repliesofReply array.\n                */\n                let repliesLength = this.replyOfReplyCount;\n                let repliesArray = this.items;\n                let id;\n                if (repliesLength - 1 == -1) {\n                    id = 0;\n                } else {\n                    id = repliesArray[repliesLength - 1].replyOfReplyId + 1;\n                }\n                /*ensure no empty replies are submitted*/\n\n                if (this.reply.length < 1) {\n                    this.emptyMessage = 'You cant post an empty reply.Please type something';\n                } else {\n                    this.emptyMessage = '';\n                //using commentId to track all replies belonging to comment    \n                let latestReply = {\n                    date: this.currentDate,\n                    replyOfReply: this.reply,\n                    replyId: this.replyId,\n                    replyOfReplyId: id,\n                    active: true\n                };\n                this.$store.commit('addreplyOfReply', latestReply);\n                this.reply = ''\n                }\n            },\n            deleteReply(id){\n                this.$store.commit('trashReply',id)\n            }\n\n        },\n        computed: {\n            currentDate() {\n                return moment().format('llll');\n            },\n            items() {\n                return this.$store.state.repliesOfReply\n            },\n            filteredItems() {\n                //filter replies of replies to their respective reply\n                const filterById = (item) => {\n                    if (item.replyId == this.replyId) {\n                        return true;\n                    }\n                }\n                return this.$store.state.repliesOfReply.filter(filterById);\n\n            },\n            replyOfReplyCount() {\n                return this.$store.getters.replyOfReplyCount\n            },\n        }\n    }\n</script>\n<style lang=\"scss\" scoped>\n    .replies {\n        padding: 0.5rem;\n        background: #E8AFBE;\n        margin: 0rem 0rem 0.5rem 2rem;\n\n        .replyofreply-input {\n            margin: 1rem 0;\n\n            input {\n                width: 100%;\n                height: 60px;\n            }\n\n            button {\n                background-color: darkviolet;\n                padding: 0.5rem;\n                color: #fff;\n                margin: 0.5rem 0;\n\n            }\n        }\n\n        .replyofreplies {\n            background: #957aff;\n            margin: 0rem 0rem 0.5rem 2rem;\n        }\n    }\n</style>"],"sourceRoot":"src/components"}]}